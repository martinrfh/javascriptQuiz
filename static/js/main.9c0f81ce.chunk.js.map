{"version":3,"sources":["app/question/index.jsx","app/button/index.jsx","app/answers/index.jsx","app/score/index.jsx","app/question-counter/index.jsx","app/timer/index.jsx","app/start-quiz/index.jsx","app/index.jsx","index.js"],"names":["Question","questions","className","questionText","Button","text","padding","width","onClick","style","Object","assign","Answers","answers","setCurrentQuestion","currentQuestion","setShowScore","setShowQuiz","setUserScore","map","answer","isCorrect","length","prev","answerText","Math","random","Score","userScore","totalQuestions","div","variants","visible","opacity","hidden","initial","animate","QuestionCounter","TimeCountdown","initialMinute","initialSeconds","useState","minutes","setMinutes","seconds","setSeconds","useEffect","myInterval","setInterval","clearInterval","StartQuiz","setShowStart","App","showStart","showQuiz","showScore","answerOptions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9c0f81ce.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./styles.css\";\r\n\r\nexport default function Question({ questions }) {\r\n  return (\r\n    <>\r\n      <div className=\"question-box\">\r\n        <p>{questions.questionText}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./styles.css\";\r\n\r\nexport default function Button({ text, padding, width, onClick }) {\r\n  return (\r\n    <div>\r\n      <button\r\n        onClick={onClick}\r\n        className=\"btn\"\r\n        style={Object.assign(width, padding)}\r\n      >\r\n        {text}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Button from \"../button\";\r\nimport \"./styles.css\";\r\n\r\nexport default function Answers({\r\n  answers,\r\n  setCurrentQuestion,\r\n  currentQuestion,\r\n  questions,\r\n  setShowScore,\r\n  setShowQuiz,\r\n  setUserScore,\r\n}) {\r\n  function handleAnswerClick(isCorrect) {\r\n    if (currentQuestion + 1 < questions.length) {\r\n      setCurrentQuestion((prev) => prev + 1);\r\n    } else {\r\n      setShowScore(true);\r\n      setShowQuiz(false);\r\n    }\r\n    if (isCorrect === true) {\r\n      setUserScore((prev) => prev + 1);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"answers-box\">\r\n        {answers.map((answer) => (\r\n          <Button\r\n            key={Math.random() * 100}\r\n            onClick={() => handleAnswerClick(answer.isCorrect)}\r\n            text={answer.answerText}\r\n            padding={{ padding: \"10px 10px\" }}\r\n            width={{ width: \"100%\" }}\r\n          />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Button from \"../button\";\r\nimport { motion } from \"framer-motion\";\r\nimport \"./styles.css\";\r\n\r\nexport default function Score({\r\n  userScore,\r\n  setShowQuiz,\r\n  setShowScore,\r\n  setUserScore,\r\n  setCurrentQuestion,\r\n  totalQuestions,\r\n}) {\r\n  function handleClick() {\r\n    setCurrentQuestion(0);\r\n    setUserScore(0);\r\n    setShowScore(false);\r\n    setShowQuiz(true);\r\n  }\r\n\r\n  const variants = {\r\n    visible: { opacity: 1 },\r\n    hidden: { opacity: 0 },\r\n  };\r\n\r\n  return (\r\n    <motion.div\r\n      className=\"container\"\r\n      variants={variants}\r\n      initial=\"hidden\"\r\n      animate=\"visible\"\r\n    >\r\n      <div className=\"score-box\">\r\n        <h1>\r\n          you scored {userScore} out of {totalQuestions}\r\n        </h1>\r\n        <Button\r\n          onClick={handleClick}\r\n          text=\"try again\"\r\n          padding={{ padding: \"12px 25px\" }}\r\n          width={{ width: \"auto\" }}\r\n        />\r\n      </div>\r\n    </motion.div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function QuestionCounter({ currentQuestion, totalQuestions }) {\r\n  return (\r\n    <div>\r\n      <h3 className=\"question-number\">\r\n        Question\r\n        <small> {currentQuestion + 1}</small>/{totalQuestions}\r\n      </h3>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nexport default function TimeCountdown({\r\n  initialMinute,\r\n  initialSeconds,\r\n  setShowScore,\r\n  setShowQuiz,\r\n}) {\r\n  const [minutes, setMinutes] = useState(initialMinute);\r\n  const [seconds, setSeconds] = useState(initialSeconds);\r\n\r\n  useEffect(() => {\r\n    let myInterval = setInterval(() => {\r\n      if (seconds > 0) {\r\n        setSeconds(seconds - 1);\r\n      }\r\n      if (seconds === 0) {\r\n        if (minutes === 0) {\r\n          clearInterval(myInterval);\r\n          setShowQuiz(false);\r\n          setShowScore(true);\r\n        } else {\r\n          setMinutes(minutes - 1);\r\n          setSeconds(59);\r\n        }\r\n      }\r\n    }, 1000);\r\n    return () => {\r\n      clearInterval(myInterval);\r\n    };\r\n  });\r\n  return (\r\n    <div>\r\n      <h3 className=\"timer\">\r\n        {minutes}:{seconds}\r\n      </h3>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Button from \"../button\";\r\nimport \"./styles.css\";\r\n\r\nexport default function StartQuiz({ setShowQuiz, setShowStart }) {\r\n  function handleClick() {\r\n    setShowQuiz(true);\r\n    setShowStart(false);\r\n  }\r\n  return (\r\n    <div className=\"center\">\r\n      <h1 className=\"title\">Javascript Quiz</h1>\r\n      <div className=\"btn-wrapper\">\r\n        <Button\r\n          onClick={handleClick}\r\n          text=\"start\"\r\n          padding={{ padding: \"15px 65px\" }}\r\n          width={{ width: \"auto\" }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Question from \"./question\";\r\nimport Answers from \"./answers\";\r\nimport Score from \"./score\";\r\nimport QuestionCounter from \"./question-counter\";\r\nimport TimeCountdown from \"./timer\";\r\nimport StartQuiz from \"./start-quiz\";\r\nimport questions from \"./data/questions.json\";\r\nimport { motion } from \"framer-motion\";\r\nimport \"./styles.css\";\r\n\r\nexport default function App() {\r\n  const [showStart, setShowStart] = useState(true);\r\n  const [showQuiz, setShowQuiz] = useState(false);\r\n  const [showScore, setShowScore] = useState(false);\r\n  const [userScore, setUserScore] = useState(0);\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const totalQuestions = questions.length;\r\n\r\n  const variants = {\r\n    visible: { opacity: 1 },\r\n    hidden: { opacity: 0 },\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-gradiant\">\r\n      {showStart && (\r\n        <StartQuiz setShowQuiz={setShowQuiz} setShowStart={setShowStart} />\r\n      )}\r\n\r\n      {showQuiz && (\r\n        <motion.div\r\n          className=\"container\"\r\n          variants={variants}\r\n          initial=\"hidden\"\r\n          animate=\"visible\"\r\n        >\r\n          <div className=\"counter\">\r\n            <QuestionCounter\r\n              currentQuestion={currentQuestion}\r\n              totalQuestions={totalQuestions}\r\n            />\r\n            <TimeCountdown\r\n              initialMinute={4}\r\n              initialSeconds={59}\r\n              setShowScore={setShowScore}\r\n              setShowQuiz={setShowQuiz}\r\n            />\r\n          </div>\r\n\r\n          <Question questions={questions[currentQuestion]} />\r\n          <Answers\r\n            answers={questions[currentQuestion].answerOptions}\r\n            setCurrentQuestion={setCurrentQuestion}\r\n            currentQuestion={currentQuestion}\r\n            questions={questions}\r\n            setShowScore={setShowScore}\r\n            setShowQuiz={setShowQuiz}\r\n            setUserScore={setUserScore}\r\n          />\r\n        </motion.div>\r\n      )}\r\n\r\n      {showScore && (\r\n        <Score\r\n          userScore={userScore}\r\n          setShowScore={setShowScore}\r\n          setShowQuiz={setShowQuiz}\r\n          setUserScore={setUserScore}\r\n          setCurrentQuestion={setCurrentQuestion}\r\n          totalQuestions={totalQuestions}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}